#!/bin/sh

cpp=cpp
cc=cc
ar=ar
ld=cc
cppargs="-E -Wall"
ccargs="-g -Ofast -Wall -c --std=c89"
arargs="-c"
ldargs="-g -lSDL -lm -lz -Ofast"
buildargs=""
cppext=".i"
ccext=".o"
includearg="-I"
outputarg="-o"
addarg="-q"
targetarg="-T"
mainobj="main.o"
bin="bin/posric"
tccbuildf="posric.pjr"
render="render"
includes="$includearg common/include \
$includearg write/include $includearg read/include"

if [ ! -e "bin" ]; then mkdir "bin"; fi

rm common/*$cppext common/*$ccext write/*$cppext write/*$ccext \
    read/*$cppext read/*$ccext $mainobj bin/*

for var in $@; do
    if [ $var = "clean" ]; then
        exit;
    else
        export $var;
    fi
done

rm $tccbuildf

for file in common/*.c write/*.c read/*c; do
    echo $file >> $tccbuildf
    echo $cpp $cppargs $includes \
        "$file" $outputarg "$file$cppext" | tee /dev/stderr | sh;
done

for file in common/*$cppext write/*$cppext read/*$cppext; do
    echo $cc $ccargs $file $outputarg $file$ccext | tee /dev/stderr | sh;
done

for file in common/*$ccext write/*$ccext read/*$ccext; do
    echo $ar $arargs $mainobj $addarg $file | tee /dev/stderr | sh
done

echo $ld $ldargs $mainobj $outputarg $bin | tee /dev/stderr | sh;
